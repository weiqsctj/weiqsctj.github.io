<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Ajax的五个步骤</title>
    <url>/2021/03/01/Ajax%E7%9A%84%E4%BA%94%E4%B8%AA%E6%AD%A5%E9%AA%A4/</url>
    <content><![CDATA[<h1 id="Ajax请求的五个步骤"><a href="#Ajax请求的五个步骤" class="headerlink" title="Ajax请求的五个步骤"></a>Ajax请求的五个步骤</h1><h2 id="一、定义"><a href="#一、定义" class="headerlink" title="一、定义"></a>一、定义</h2><h3 id="1、什么是Ajax"><a href="#1、什么是Ajax" class="headerlink" title="1、什么是Ajax"></a>1、什么是Ajax</h3><p>Ajax：即异步 JavaScript 和XML。Ajax是一种用于创建快速动态网页的技术。通过在后台与服务器进行少量数据交换，Ajax可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。而传统的网页(不使用 Ajax)如果需要更新内容，必需重载整个网页面。</p>
<p><img src="/2021/03/01/Ajax%E7%9A%84%E4%BA%94%E4%B8%AA%E6%AD%A5%E9%AA%A4/7509.jpg" alt="Ajax 的五个步骤"></p>
<h3 id="2、同步与异步的区别"><a href="#2、同步与异步的区别" class="headerlink" title="2、同步与异步的区别"></a>2、同步与异步的区别</h3><p>同步提交：当用户发送请求时，当前页面不可以使用，服务器响应页面到客户端，响应完成，用户才可以使用页面。</p>
<p>异步提交：当用户发送请求时，当前页面还可以继续使用，当异步请求的数据响应给页面，页面把数据显示出来 。</p>
<span id="more"></span>

<h3 id="3、ajax的工作原理"><a href="#3、ajax的工作原理" class="headerlink" title="3、ajax的工作原理"></a>3、ajax的工作原理</h3><p>客户端发送请求，请求交给xhr，xhr把请求提交给服务，服务器进行业务处理，服务器响应数据交给xhr对象，xhr对象接收数据，由javascript把数据写到页面上，如下图所示：</p>
<p><img src="/2021/03/01/Ajax%E7%9A%84%E4%BA%94%E4%B8%AA%E6%AD%A5%E9%AA%A4/3c73.jpg" alt="ajax工作原理"></p>
<h2 id="二、实现AJAX的基本步骤"><a href="#二、实现AJAX的基本步骤" class="headerlink" title="二、实现AJAX的基本步骤"></a>二、实现AJAX的基本步骤</h2><p>要完整实现一个AJAX异步调用和局部刷新,通常需要以下几个步骤:</p>
<p>创建XMLHttpRequest对象,即创建一个异步调用对象.<br>创建一个新的HTTP请求,并指定该HTTP请求的方法、URL及验证信息.<br>设置响应HTTP请求状态变化的函数.<br>发送HTTP请求.<br>获取异步调用返回的数据.<br>使用JavaScript和DOM实现局部刷新.</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>jquery</tag>
        <tag>Ajax</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo的书写和使用</title>
    <url>/2021/12/20/Hexo%E7%9A%84%E4%B9%A6%E5%86%99%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="书写和使用Hexo"><a href="#书写和使用Hexo" class="headerlink" title="书写和使用Hexo"></a><strong>书写和使用Hexo</strong></h1><blockquote>
<p>在利用 Hexo 框架搭建一个属于我们自己的博客网站后，下面我们就来谈谈怎样书写和使用Hexo</p>
<p>Hexo + GitHub Pages搭建的博客，nexT主题，Windows</p>
</blockquote>
<h2 id="一、创建文章"><a href="#一、创建文章" class="headerlink" title="一、创建文章"></a>一、创建文章</h2><p>在站点文件夹中打开 git bash，输入如下命令创建文章，其中 title 为文章的标题</p>
<ul>
<li>$ hexo new “title”</li>
</ul>
<p>当输入命令后，就会在 source/_post 文件夹下创建一个文件，命名为：title.md</p>
<p>这个文件就是将要发布到网站上的原始文件，用于记录文章内容</p>
<p>下面，我们将要在这个文件中写下我们的第一篇博客</p>
<h2 id="二、编写文章（基于-Markdown）"><a href="#二、编写文章（基于-Markdown）" class="headerlink" title="二、编写文章（基于 Markdown）"></a>二、编写文章（基于 Markdown）</h2><h3 id="1、Markdown-简介"><a href="#1、Markdown-简介" class="headerlink" title="1、Markdown 简介"></a>1、Markdown 简介</h3><p>但是，在我们正式写下第一个文字前，我们需要了解一下究竟什么是 Markdown？</p>
<p>Markdown 是一种可以使用普通文本编辑器编写的 标记语言，通过简单的 标记语法，它可以使普通文本内容具有一定的格式</p>
<p>基于 Markdown 语法的简洁性，它已经成为目前世界上最流行的用于书写博客的语言</p>
<h3 id="2、Markdown-语法"><a href="#2、Markdown-语法" class="headerlink" title="2、Markdown 语法"></a>2、Markdown 语法</h3><p>在编写 Markdown 时，博主强烈的推荐给大家一款简洁易用的 Markdown 编辑器 —— Typora</p>
<p>按照官方的说法就是 简单而强大，它不仅支持原生的语法，也支持对应的快捷键，更重要的是它还可以 实时预览</p>
<p>这里附上 Typora 的下载地址：<a href="https://www.typora.io/%EF%BC%8C%E6%9C%89%E5%85%B4%E8%B6%A3%E7%9A%84%E6%9C%8B%E5%8F%8B%E5%8F%AF%E4%BB%A5%E4%B8%8B%E8%BD%BD%E6%9D%A5%E8%AF%95%E8%AF%95">https://www.typora.io/，有兴趣的朋友可以下载来试试</a></p>
<p>好，下面开始进入正题，介绍一些常用的 Markdown 语法</p>
<p><img src="/2021/12/20/Hexo%E7%9A%84%E4%B9%A6%E5%86%99%E5%92%8C%E4%BD%BF%E7%94%A8/8321.jpg" alt="美女"></p>
<h4 id="（1）标题"><a href="#（1）标题" class="headerlink" title="（1）标题"></a>（1）标题</h4><p>Markdown 语法：</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">- # 一级标题</span><br><span class="line"></span><br><span class="line">- ## 二级标题</span><br><span class="line"></span><br><span class="line">- ### 三级标题</span><br><span class="line"></span><br><span class="line">- #### 四级标题</span><br><span class="line"></span><br><span class="line">- ##### 五级标题</span><br><span class="line"></span><br><span class="line">- ###### 六级标题</span><br></pre></td></tr></table></figure>



<p><strong>Typora 快捷键：</strong></p>
<p>Ctrl+1：一级标题</p>
<p>Ctrl+2：二级标题</p>
<p>Ctrl+3：三级标题</p>
<p>Ctrl+4：四级标题</p>
<p>Ctrl+5：五级标题</p>
<p>Ctrl+6 ：六级标题</p>
<p>Ctrl+0：段落</p>
<h4 id="（2）粗体、斜体、删除线和下划线"><a href="#（2）粗体、斜体、删除线和下划线" class="headerlink" title="（2）粗体、斜体、删除线和下划线"></a>（2）粗体、斜体、删除线和下划线</h4><p>Markdown 语法：</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="strong">*斜体*</span></span><br><span class="line"><span class="strong">**粗体**</span></span><br><span class="line"><span class="strong">***加粗斜体**</span>*</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure>

<p>Typora 快捷键：</p>
<p>Ctrl+I：斜体</p>
<p>Ctrl+B：粗体</p>
<p>Ctrl+U：下划线</p>
<p>Alt+Shift+5：删除线</p>
<span id="more"></span> 



<h4 id="（3）引用块"><a href="#（3）引用块" class="headerlink" title="（3）引用块"></a>（3）引用块</h4><p>Markdown 语法：</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 文字引用</span><br></pre></td></tr></table></figure>
</blockquote>
<p>Typora 快捷键： Ctrl+Shift+Q</p>
<h4 id="（4）代码块"><a href="#（4）代码块" class="headerlink" title="（4）代码块"></a>（4）代码块</h4><p>Markdown 语法：</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line"><span class="string">`行内代码`</span></span><br></pre></td></tr></table></figure>

<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">​<span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">多行代码</span></span><br><span class="line"><span class="string">多行代码</span></span><br><span class="line"><span class="string">​`</span><span class="string">``</span></span><br></pre></td></tr></table></figure>



<p>Typora 快捷键：</p>
<p>行内代码：Ctrl+Shift+`</p>
<p>多行代码：Ctrl+Shift+K</p>
<h4 id="（5）公式块"><a href="#（5）公式块" class="headerlink" title="（5）公式块"></a>（5）公式块</h4><p>Markdown 语法：</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="symbol">$</span><span class="symbol">$</span></span><br><span class="line">数学公式</span><br><span class="line"><span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure>

<p>Typora 快捷键： Ctrl+Shift+M</p>
<h4 id="（6）分割线"><a href="#（6）分割线" class="headerlink" title="（6）分割线"></a>（6）分割线</h4><p>Markdown 语法：</p>
<figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">方法一：</span>--<span class="literal">-</span></span><br><span class="line"></span><br><span class="line"><span class="comment">方法二：</span>++<span class="literal">+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">方法三：***</span></span><br></pre></td></tr></table></figure>

<h4 id="（7）列表"><a href="#（7）列表" class="headerlink" title="（7）列表"></a>（7）列表</h4><p>Markdown 语法：        </p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">1.有序列表项</span><br><span class="line"></span><br><span class="line"><span class="bullet">*</span> 无序列表项</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> 无序列表项</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> 无序列表项</span><br></pre></td></tr></table></figure>


<p>Typora 快捷键：</p>
<p>有序列表项：Ctrl+Shift+[</p>
<p>无序列表项：Ctrl+Shift+]</p>
<h4 id="（8）表格"><a href="#（8）表格" class="headerlink" title="（8）表格"></a>（8）表格</h4><p>Markdown 语法：</p>
<figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">|<span class="string"> 表头1  </span>|<span class="string"> 表头2  </span>|</span><br><span class="line">|<span class="string"> ------ </span>|<span class="string"> ------ </span>|</span><br><span class="line">|<span class="string"> 内容11 </span>|<span class="string"> 内容12 </span>|</span><br><span class="line">|<span class="string"> 内容21 </span>|<span class="string"> 内容22 </span>|</span><br></pre></td></tr></table></figure>

<p>Typora 快捷键： Ctrl+T</p>
<h4 id="（9）超链接"><a href="#（9）超链接" class="headerlink" title="（9）超链接"></a>（9）超链接</h4><p>Markdown语法：</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line">方法一：<span class="selector-attr">[链接文字]</span>(链接地址 <span class="string">&quot;链接描述&quot;</span>)</span><br><span class="line">例如：<span class="selector-attr">[示例链接]</span>(<span class="attribute">https</span>:<span class="comment">//www.example.com/ &quot;示例链接&quot;)</span></span><br><span class="line"></span><br><span class="line">方法二：&lt;链接地址&gt;</span><br><span class="line">例如：&lt;<span class="attribute">https</span>:<span class="comment">//www.example.com/&gt;</span></span><br></pre></td></tr></table></figure>


<p>Typora快捷键： Ctrl+K</p>
<h4 id="（10）图片"><a href="#（10）图片" class="headerlink" title="（10）图片"></a>（10）图片</h4><p>Markdown语法：</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line">!<span class="selector-attr">[图片文字]</span>(图片地址 <span class="string">&quot;图片描述&quot;</span>)</span><br><span class="line"></span><br><span class="line">例如：!<span class="selector-attr">[示例图片]</span>(<span class="attribute">https</span>:<span class="comment">//www.example.com/example.PNG &quot;示例图片&quot;)</span></span><br></pre></td></tr></table></figure>

<p>Typora快捷键： Ctrl+Shift+I</p>
<p><img src="/2021/12/20/Hexo%E7%9A%84%E4%B9%A6%E5%86%99%E5%92%8C%E4%BD%BF%E7%94%A8/42750.jpg" alt="可爱"></p>
<p>说明：在 Hexo中 插入图片时，请按照以下的步骤进行设置</p>
<p>将 站点配置文件 中的 <code>post_asset_folder</code> 选项的值设置为 true</p>
<p>在站点文件夹中打开 git bash，输入命令 <code>npm install hexo-asset-image --save</code> 安装插件</p>
<p>这样，当使用 <code>hexo new title</code> 创建文章时，将同时在 source/_post 文件夹中生成一个与 title 同名的文件夹，我们只需将图片放进此文件夹中，然后在文章中通过 Markdown 语法进行引用即可</p>
<p>例如，在资源文件夹（就是那个与 title 同名的文件夹）中添加图片 example.PNG，则可以在对应的文章中使用语句 <code>![示例图片](title/example.PNG &quot;示例图片&quot;)</code> 添加图片</p>
<!--more--> 

<h3 id="3、高级设置"><a href="#3、高级设置" class="headerlink" title="3、高级设置"></a>3、高级设置</h3><h4 id="（1）模板设置"><a href="#（1）模板设置" class="headerlink" title="（1）模板设置"></a>（1）模板设置</h4><p>当我们使用命令 <code>hexo new &quot;title&quot;</code> 创建文章时，Hexo 会根据 /scaffolds/post.md 对新文章进行初始化</p>
<p>换言之，/scaffolds/post.md 就是新文章的 模板，所以我们可以修改它来适应自己的写作习惯</p>
<p>一个简单的示例如下：</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line"><span class="keyword">tags:</span> </span><br><span class="line">categories: </span><br></pre></td></tr></table></figure>

<h4 id="（2）头部设置"><a href="#（2）头部设置" class="headerlink" title="（2）头部设置"></a>（2）头部设置</h4><p>在每篇利用 Hexo 创建的文章的开头，都会有对文章进行说明的文字，叫做 文章头部</p>
<p>文章的头部除了可以设置文章标题、发布日期等基础信息外，还可以为文章添加标签、分类等</p>
<p>一个简单的示例如下：</p>
<figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line">title: Title</span><br><span class="line">date: YYYY-MM-DD HH:MM:SS</span><br><span class="line"><span class="keyword">tags:</span> [tag1, tag2, ...]</span><br><span class="line">categories: category</span><br></pre></td></tr></table></figure>

<p>注意：属性和属性值之间必须有一个空格，否则会解析错误</p>
<h4 id="（3）首页显示"><a href="#（3）首页显示" class="headerlink" title="（3）首页显示"></a>（3）首页显示</h4><p>在利用 Hexo 框架搭建的博客网站中，首页会显示文章的内容，且默认显示文章的全部内容</p>
<p>如果当文章太长的时候就会显得十分冗余，所以我们有必要对其进行精简</p>
<p>这时，我们只需在文章中使用 <!--more--> 标志即可，表示只会显示标志前面的内容</p>
<h2 id="三、部署发布"><a href="#三、部署发布" class="headerlink" title="三、部署发布"></a>三、部署发布</h2><p>在站点文件夹中打开 git bash，输入如下命令部署和发布文章</p>
<ul>
<li>$ hexo g -d</li>
</ul>
<p>建议：在使用 hexo g 部署之后，可以先使用 hexo s 运行本地站点，然后在浏览器输入地址 <a href="http://lacolhost:4000/">http://lacolhost:4000/</a> 查看运行结果，检查无误后再使用 hexo d 发布</p>
<p>//hexo g -d</p>
<p>hexo clean –&gt;hexo generate –&gt;hexo deploy</p>
<p>hexo clean<br>hexo g<br>hexo d</p>
<p>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</p>
<hr>
<h3 id="如果有问题可以试试："><a href="#如果有问题可以试试：" class="headerlink" title="如果有问题可以试试："></a><strong>如果有问题可以试试：</strong></h3><p>删除.deploy_git文件夹;<br>输入git config –global core.autocrlf false<br>然后，依次执行：<br>hexo clean<br>hexo g<br>hexo d</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>TodoList</title>
    <url>/2021/03/02/TodoList/</url>
    <content><![CDATA[<h1 id="TodoList代码-项目模块"><a href="#TodoList代码-项目模块" class="headerlink" title="TodoList代码-项目模块"></a>TodoList代码-项目模块</h1><!DOCTYPE html>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">dir</span>=<span class="string">&quot;ltr&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/font-awesome/css/font-awesome.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/jQuery/jquery-3.5.1.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;txtb&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Add a task&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;notcomp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>异常(Not Completed)<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;comp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">​    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>正常(Completed)<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;ToDolist.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/2021/03/02/TodoList/2007.jpg"></p>
<span id="more"></span>

<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;montserrat&quot;</span>,sans-serif;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">120deg</span>,<span class="number">#487eb0</span>,<span class="number">#fbc531</span>);</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">100vh</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span>&#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">800px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.txtb</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">background</span>: none;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h3</span>&#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.task</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">0.5</span>);</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">6px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.task</span> <span class="selector-tag">i</span>&#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.comp</span> <span class="selector-class">.task</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>);</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(&quot;.txtb&quot;).on(&quot;keyup&quot;,function(e)&#123;</span><br><span class="line">  &#x2F;&#x2F;13  means enter button</span><br><span class="line">  if(e.keyCode &#x3D;&#x3D; 13 &amp;&amp; $(&quot;.txtb&quot;).val() !&#x3D; &quot;&quot;)</span><br><span class="line">  &#x2F;&#x2F; val返回表单字段的值</span><br><span class="line">  &#123;</span><br><span class="line">    var task &#x3D; $(&quot;&lt;div class&#x3D;&#39;task&#39;&gt;&lt;&#x2F;div&gt;&quot;).text($(&quot;.txtb&quot;).val());</span><br><span class="line">    var del &#x3D; $(&quot;&lt;i class&#x3D;&#39;fas fa-trash-alt&#39;&gt;&lt;&#x2F;i&gt;&quot;).click(function()</span><br><span class="line">    &#123;</span><br><span class="line">      var p &#x3D; $(this).parent();</span><br><span class="line">      p.fadeOut(function()&#123;</span><br><span class="line">        p.remove();</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    var check &#x3D; $(&quot;&lt;i class&#x3D;&#39;fas fa-check&#39;&gt;&lt;&#x2F;i&gt;&quot;).click(function()&#123;</span><br><span class="line">      var p &#x3D; $(this).parent();</span><br><span class="line">      p.fadeOut(function()&#123;</span><br><span class="line">        $(&quot;.comp&quot;).append(p);</span><br><span class="line">        p.fadeIn();</span><br><span class="line">      &#125;);</span><br><span class="line">      $(this).remove();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    task.append(del,check);</span><br><span class="line">    $(&quot;.notcomp&quot;).append(task);</span><br><span class="line">      &#x2F;&#x2F;to clear the input</span><br><span class="line">    $(&quot;.txtb&quot;).val(&quot;&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>项目</category>
      </categories>
      <tags>
        <tag>项目模块</tag>
        <tag>代码</tag>
      </tags>
  </entry>
  <entry>
    <title>css初始化</title>
    <url>/2021/03/04/css%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
    <content><![CDATA[<h1 id="初始化CSS"><a href="#初始化CSS" class="headerlink" title="初始化CSS"></a>初始化CSS</h1><p>建站老手都知道，这是为了考虑到浏览器的兼容问题，其实不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面差异。当然，初始化样式会对SEO有一定的影响，但鱼和熊掌不可兼得，但力求影响最小的情况下初始化。</p>
<p><img src="/2021/03/04/css%E5%88%9D%E5%A7%8B%E5%8C%96/2003.jpg" alt="初始化css"></p>
<p>  最简单的初始化方法就是： * {padding: 0; margin: 0;} 。有很多人也是这样写的。这确实很简单，但有人就会感到疑问：*号这样一个通用符在编写代码的时候是快，但如果网站很大，CSS样式表文件很大，这样写的话，他会把所有的标签都初始化一遍，这样就大大的加强了网站运行的负载，会使网站加载的时候需要很长一段时间。</p>
<span id="more"></span>

<p>  写过css的都知道每个网页引进的css首先都需要初始化，而出名的css reset有YUI css reset（QQ、淘宝等都出现他的影子），业内用的最多的还有Erik Meyer’s CSS Reset。</p>
<p>  CSS初始化是指重设浏览器的样式。不同的浏览器默认的样式可能不尽相同，所以开发时的第一件事可能就是如何把它们统一。如果没对CSS初始化往往会出现浏览器之间的页面差异。每次新开发网站或新网页时候通过初始化CSS样式的属性，为我们将用到的CSS或html标签更加方便准确，使得我们开发网页内容时更加方便简洁，同时减少CSS代码量，节约网页下载时间。</p>
<h2 id="1、雅虎工程师提供的CSS初始化示例代码"><a href="#1、雅虎工程师提供的CSS初始化示例代码" class="headerlink" title="1、雅虎工程师提供的CSS初始化示例代码"></a>1、雅虎工程师提供的CSS初始化示例代码</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>,<span class="selector-tag">div</span>,<span class="selector-tag">dl</span>,<span class="selector-tag">dt</span>,<span class="selector-tag">dd</span>,<span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>,<span class="selector-tag">li</span>,<span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,pre,<span class="selector-tag">code</span>,<span class="selector-tag">form</span>,<span class="selector-tag">fieldset</span>,<span class="selector-tag">legend</span>,<span class="selector-tag">input</span>,<span class="selector-tag">button</span>,<span class="selector-tag">textarea</span>,<span class="selector-tag">p</span>,<span class="selector-tag">blockquote</span>,<span class="selector-tag">th</span>,<span class="selector-tag">td</span> &#123; <span class="attribute">margin</span>:<span class="number">0</span>; <span class="attribute">padding</span>:<span class="number">0</span>; &#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123; <span class="attribute">background</span>:<span class="number">#fff</span>; <span class="attribute">color</span>:<span class="number">#555</span>; <span class="attribute">font-size</span>:<span class="number">14px</span>; <span class="attribute">font-family</span>: Verdana, Arial, Helvetica, sans-serif; &#125;</span><br><span class="line"><span class="selector-tag">td</span>,<span class="selector-tag">th</span>,<span class="selector-tag">caption</span> &#123; <span class="attribute">font-size</span>:<span class="number">14px</span>; &#125;</span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span> &#123; <span class="attribute">font-weight</span>:normal; <span class="attribute">font-size</span>:<span class="number">100%</span>; &#125;</span><br><span class="line"><span class="selector-tag">address</span>, <span class="selector-tag">caption</span>, <span class="selector-tag">cite</span>, <span class="selector-tag">code</span>, <span class="selector-tag">dfn</span>, <span class="selector-tag">em</span>, <span class="selector-tag">strong</span>, <span class="selector-tag">th</span>, <span class="selector-tag">var</span> &#123; <span class="attribute">font-style</span>:normal; <span class="attribute">font-weight</span>:normal;&#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123; <span class="attribute">color</span>:<span class="number">#555</span>; <span class="attribute">text-decoration</span>:none; &#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123; <span class="attribute">text-decoration</span>:underline; &#125;</span><br><span class="line"><span class="selector-tag">img</span> &#123; <span class="attribute">border</span>:none; &#125;</span><br><span class="line"><span class="selector-tag">ol</span>,<span class="selector-tag">ul</span>,<span class="selector-tag">li</span> &#123; <span class="attribute">list-style</span>:none; &#125;</span><br><span class="line"><span class="selector-tag">input</span>, <span class="selector-tag">textarea</span>, select, <span class="selector-tag">button</span> &#123; <span class="attribute">font</span>:<span class="number">14px</span> Verdana,Helvetica,Arial,sans-serif; &#125;</span><br><span class="line"><span class="selector-tag">table</span> &#123; <span class="attribute">border-collapse</span>:collapse; &#125;</span><br><span class="line"><span class="selector-tag">html</span> &#123;<span class="attribute">overflow-y</span>: scroll;&#125; </span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clearfix</span>:after &#123;content: <span class="string">&quot;.&quot;</span>; <span class="attribute">display</span>: block; <span class="attribute">height</span>:<span class="number">0</span>; <span class="attribute">clear</span>:both; <span class="attribute">visibility</span>: hidden;&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span> &#123; *zoom:<span class="number">1</span>; &#125;</span><br></pre></td></tr></table></figure>



<h2 id="2、腾讯官网-样式初始化"><a href="#2、腾讯官网-样式初始化" class="headerlink" title="2、腾讯官网 样式初始化"></a>2、腾讯官网 样式初始化</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>,<span class="selector-tag">ol</span>,<span class="selector-tag">ul</span>,<span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,<span class="selector-tag">p</span>,<span class="selector-tag">th</span>,<span class="selector-tag">td</span>,<span class="selector-tag">dl</span>,<span class="selector-tag">dd</span>,<span class="selector-tag">form</span>,<span class="selector-tag">fieldset</span>,<span class="selector-tag">legend</span>,<span class="selector-tag">input</span>,<span class="selector-tag">textarea</span>,select&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>&#125; </span><br><span class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">font</span>:<span class="number">12px</span><span class="string">&quot;宋体&quot;</span>,<span class="string">&quot;Arial Narrow&quot;</span>,HELVETICA;<span class="attribute">background</span>:<span class="number">#fff</span>;-webkit-text-size-adjust:<span class="number">100%</span>;&#125; </span><br><span class="line"><span class="selector-tag">a</span>&#123;<span class="attribute">color</span>:<span class="number">#2d374b</span>;<span class="attribute">text-decoration</span>:none&#125; </span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">color</span>:<span class="number">#cd0200</span>;<span class="attribute">text-decoration</span>:underline&#125; </span><br><span class="line"><span class="selector-tag">em</span>&#123;<span class="attribute">font-style</span>:normal&#125; </span><br><span class="line"><span class="selector-tag">li</span>&#123;<span class="attribute">list-style</span>:none&#125; </span><br><span class="line"><span class="selector-tag">img</span>&#123;<span class="attribute">border</span>:<span class="number">0</span>;<span class="attribute">vertical-align</span>:middle&#125; </span><br><span class="line"><span class="selector-tag">table</span>&#123;<span class="attribute">border-collapse</span>:collapse;<span class="attribute">border-spacing</span>:<span class="number">0</span>&#125; </span><br><span class="line"><span class="selector-tag">p</span>&#123;<span class="attribute">word-wrap</span>:break-word&#125; </span><br><span class="line">新浪官网 样式初始化</span><br><span class="line"><span class="selector-tag">body</span>,<span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>,<span class="selector-tag">li</span>,<span class="selector-tag">p</span>,<span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,<span class="selector-tag">form</span>,<span class="selector-tag">fieldset</span>,<span class="selector-tag">table</span>,<span class="selector-tag">td</span>,<span class="selector-tag">img</span>,<span class="selector-tag">div</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">border</span>:<span class="number">0</span>;&#125; </span><br><span class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">color</span>:<span class="number">#333</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>; <span class="attribute">margin-top</span>:<span class="number">5px</span>;<span class="attribute">font-family</span>:<span class="string">&quot;SimSun&quot;</span>,<span class="string">&quot;宋体&quot;</span>,<span class="string">&quot;Arial Narrow&quot;</span>;&#125; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>&#123;<span class="attribute">list-style-type</span>:none;&#125; </span><br><span class="line">select,<span class="selector-tag">input</span>,<span class="selector-tag">img</span>,select&#123;<span class="attribute">vertical-align</span>:middle;&#125; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>&#123;<span class="attribute">text-decoration</span>:none;&#125; </span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;<span class="attribute">color</span>:<span class="number">#009</span>;&#125; </span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;<span class="attribute">color</span>:<span class="number">#800080</span>;&#125; </span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>,<span class="selector-tag">a</span><span class="selector-pseudo">:focus</span>&#123;<span class="attribute">color</span>:<span class="number">#c00</span>;<span class="attribute">text-decoration</span>:underline;&#125; </span><br></pre></td></tr></table></figure>



<h2 id="3、淘宝官网-样式初始化"><a href="#3、淘宝官网-样式初始化" class="headerlink" title="3、淘宝官网 样式初始化"></a>3、淘宝官网 样式初始化</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>, <span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, hr, <span class="selector-tag">p</span>, <span class="selector-tag">blockquote</span>, <span class="selector-tag">dl</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">li</span>, pre, <span class="selector-tag">form</span>, <span class="selector-tag">fieldset</span>, <span class="selector-tag">legend</span>, <span class="selector-tag">button</span>, <span class="selector-tag">input</span>, <span class="selector-tag">textarea</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123; <span class="attribute">margin</span>:<span class="number">0</span>; <span class="attribute">padding</span>:<span class="number">0</span>; &#125; </span><br><span class="line"><span class="selector-tag">body</span>, <span class="selector-tag">button</span>, <span class="selector-tag">input</span>, select, <span class="selector-tag">textarea</span> &#123; <span class="attribute">font</span>:<span class="number">12px</span>/<span class="number">1.5</span>tahoma, arial, \<span class="number">5</span>b8b\<span class="number">4</span>f53; &#125; </span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>&#123; <span class="attribute">font-size</span>:<span class="number">100%</span>; &#125; </span><br><span class="line"><span class="selector-tag">address</span>, <span class="selector-tag">cite</span>, <span class="selector-tag">dfn</span>, <span class="selector-tag">em</span>, <span class="selector-tag">var</span> &#123; <span class="attribute">font-style</span>:normal; &#125; </span><br><span class="line"><span class="selector-tag">code</span>, <span class="selector-tag">kbd</span>, pre, <span class="selector-tag">samp</span> &#123; <span class="attribute">font-family</span>:couriernew, courier, monospace; &#125; </span><br><span class="line">small&#123; <span class="attribute">font-size</span>:<span class="number">12px</span>; &#125; </span><br><span class="line"><span class="selector-tag">ul</span>, <span class="selector-tag">ol</span> &#123; <span class="attribute">list-style</span>:none; &#125; </span><br><span class="line"><span class="selector-tag">a</span> &#123; <span class="attribute">text-decoration</span>:none; &#125; </span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123; <span class="attribute">text-decoration</span>:underline; &#125; </span><br><span class="line"><span class="selector-tag">sup</span> &#123; <span class="attribute">vertical-align</span>:text-top; &#125; </span><br><span class="line">sub&#123; <span class="attribute">vertical-align</span>:text-bottom; &#125; </span><br><span class="line"><span class="selector-tag">legend</span> &#123; <span class="attribute">color</span>:<span class="number">#000</span>; &#125; </span><br><span class="line"><span class="selector-tag">fieldset</span>, <span class="selector-tag">img</span> &#123; <span class="attribute">border</span>:<span class="number">0</span>; &#125; </span><br><span class="line"><span class="selector-tag">button</span>, <span class="selector-tag">input</span>, select, <span class="selector-tag">textarea</span> &#123; <span class="attribute">font-size</span>:<span class="number">100%</span>; &#125; </span><br><span class="line"><span class="selector-tag">table</span> &#123; <span class="attribute">border-collapse</span>:collapse; <span class="attribute">border-spacing</span>:<span class="number">0</span>; &#125; </span><br></pre></td></tr></table></figure>

<h2 id="4、网易官网-样式初始化"><a href="#4、网易官网-样式初始化" class="headerlink" title="4、网易官网 样式初始化"></a>4、网易官网 样式初始化</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;<span class="attribute">overflow-y</span>:scroll;&#125; </span><br><span class="line"><span class="selector-tag">body</span> &#123;<span class="attribute">margin</span>:<span class="number">0</span>; <span class="attribute">padding</span>:<span class="number">29px</span>00; <span class="attribute">font</span>:<span class="number">12px</span><span class="string">&quot;\5B8B\4F53&quot;</span>,sans-serif;<span class="attribute">background</span>:<span class="number">#ffffff</span>;&#125; </span><br><span class="line"><span class="selector-tag">div</span>,<span class="selector-tag">dl</span>,<span class="selector-tag">dt</span>,<span class="selector-tag">dd</span>,<span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>,<span class="selector-tag">li</span>,<span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,pre,<span class="selector-tag">form</span>,<span class="selector-tag">fieldset</span>,<span class="selector-tag">input</span>,<span class="selector-tag">textarea</span>,<span class="selector-tag">blockquote</span>,<span class="selector-tag">p</span>&#123;<span class="attribute">padding</span>:<span class="number">0</span>; <span class="attribute">margin</span>:<span class="number">0</span>;&#125; </span><br><span class="line"><span class="selector-tag">table</span>,<span class="selector-tag">td</span>,<span class="selector-tag">tr</span>,<span class="selector-tag">th</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>;&#125; </span><br><span class="line"><span class="selector-tag">li</span>&#123;<span class="attribute">list-style-type</span>:none;&#125; </span><br><span class="line"><span class="selector-tag">img</span>&#123;<span class="attribute">vertical-align</span>:top;<span class="attribute">border</span>:<span class="number">0</span>;&#125; </span><br><span class="line"><span class="selector-tag">ol</span>,<span class="selector-tag">ul</span> &#123;<span class="attribute">list-style</span>:none;&#125; </span><br><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>&#123;<span class="attribute">font-size</span>:<span class="number">12px</span>; <span class="attribute">font-weight</span>:normal;&#125; </span><br><span class="line"><span class="selector-tag">address</span>,<span class="selector-tag">cite</span>,<span class="selector-tag">code</span>,<span class="selector-tag">em</span>,<span class="selector-tag">th</span> &#123;<span class="attribute">font-weight</span>:normal; <span class="attribute">font-style</span>:normal;&#125; </span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure>

<h2 id="5、新浪官网-样式初始化"><a href="#5、新浪官网-样式初始化" class="headerlink" title="5、新浪官网 样式初始化"></a>5、新浪官网 样式初始化</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>,<span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>,<span class="selector-tag">li</span>,<span class="selector-tag">p</span>,<span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>,<span class="selector-tag">h4</span>,<span class="selector-tag">h5</span>,<span class="selector-tag">h6</span>,<span class="selector-tag">form</span>,<span class="selector-tag">fieldset</span>,<span class="selector-tag">table</span>,<span class="selector-tag">td</span>,<span class="selector-tag">img</span>,<span class="selector-tag">div</span>&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>;<span class="attribute">border</span>:<span class="number">0</span>;&#125; </span><br><span class="line"><span class="selector-tag">body</span>&#123;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">color</span>:<span class="number">#333</span>;<span class="attribute">font-size</span>:<span class="number">12px</span>; <span class="attribute">margin-top</span>:<span class="number">5px</span>;<span class="attribute">font-family</span>:<span class="string">&quot;SimSun&quot;</span>,<span class="string">&quot;宋体&quot;</span>,<span class="string">&quot;Arial Narrow&quot;</span>;&#125; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span>,<span class="selector-tag">ol</span>&#123;<span class="attribute">list-style-type</span>:none;&#125; </span><br><span class="line">select,<span class="selector-tag">input</span>,<span class="selector-tag">img</span>,select&#123;<span class="attribute">vertical-align</span>:middle;&#125; </span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>&#123;<span class="attribute">text-decoration</span>:none;&#125; </span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;<span class="attribute">color</span>:<span class="number">#009</span>;&#125; </span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;<span class="attribute">color</span>:<span class="number">#800080</span>;&#125; </span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>,<span class="selector-tag">a</span><span class="selector-pseudo">:focus</span>&#123;<span class="attribute">color</span>:<span class="number">#c00</span>;<span class="attribute">text-decoration</span>:underline;&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>兼容</tag>
      </tags>
  </entry>
  <entry>
    <title>get与post方法</title>
    <url>/2021/03/01/get%E4%B8%8Epost%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="GET-和-POST-方法的区别："><a href="#GET-和-POST-方法的区别：" class="headerlink" title="GET 和 POST 方法的区别："></a><strong>GET 和 POST 方法的区别</strong>：</h1><h2 id="1、发送的数据数量"><a href="#1、发送的数据数量" class="headerlink" title="1、发送的数据数量"></a><strong>1、发送的数据数量</strong></h2><p>在 GET 中，只能发送有限数量的数据，因为数据是在 URL 中发送的。</p>
<p>在 POST 中，可以发送大量的数据，因为数据是在正文主体中发送的。</p>
<h2 id="2、安全性"><a href="#2、安全性" class="headerlink" title="2、安全性"></a><strong>2、安全性</strong></h2><p>GET 方法发送的数据不受保护，因为数据在 URL 栏中公开，这增加了漏洞和黑客攻击的风险。</p>
<p>POST 方法发送的数据是安全的，因为数据未在 URL 栏中公开，还可以在其中使用多种编码技术，这使其具有弹性。</p>
<p><img src="/2021/03/01/get%E4%B8%8Epost%E6%96%B9%E6%B3%95/4333.jpg" alt="get与post"></p>
<h2 id="3、加入书签中"><a href="#3、加入书签中" class="headerlink" title="3、加入书签中"></a><strong>3、加入书签中</strong></h2><p>GET 查询的结果可以加入书签中，因为它以 URL 的形式存在；而 POST 查询的结果无法加入书签中。</p>
<span id="more"></span>

<h2 id="4、编码"><a href="#4、编码" class="headerlink" title="4、编码"></a><strong>4、编码</strong></h2><p>在表单中使用 GET 方法时，数据类型中只接受 ASCII 字符。</p>
<p>在表单提交时，POST 方法不绑定表单数据类型，并允许二进制和 ASCII 字符。</p>
<h2 id="5、可变大小"><a href="#5、可变大小" class="headerlink" title="5、可变大小"></a><strong>5、可变大小</strong></h2><p>GET 方法中的可变大小约为 2000 个字符。</p>
<p>POST 方法最多允许 8 Mb 的可变大小。</p>
<h2 id="6、缓存"><a href="#6、缓存" class="headerlink" title="6、缓存"></a><strong>6、缓存</strong></h2><p>GET 方法的数据是可缓存的，而 POST 方法的数据是无法缓存的。</p>
<h2 id="7、主要作用"><a href="#7、主要作用" class="headerlink" title="7、主要作用"></a><strong>7、主要作用</strong></h2><p>GET 方法主要用于获取信息。而 POST 方法主要用于更新数据。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>jquery</tag>
        <tag>Ajax</tag>
        <tag>get,post</tag>
      </tags>
  </entry>
  <entry>
    <title>事件冒泡</title>
    <url>/2021/03/02/%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1/</url>
    <content><![CDATA[<h1 id="事件冒泡、event-target以及this、function（e）"><a href="#事件冒泡、event-target以及this、function（e）" class="headerlink" title="事件冒泡、event.target以及this、function（e）"></a>事件冒泡、event.target以及this、function（e）</h1><h2 id="一、什么是事件冒泡"><a href="#一、什么是事件冒泡" class="headerlink" title="一、什么是事件冒泡"></a>一、什么是事件冒泡</h2><p>在一个对象上触发某类事件（比如单击onclick事件），如果此对象定义了此事件的处理程序，那么此事件就会调用这个处理程序，如果没有定义此事件处理程序或者事件返回true，那么这个事件会向这个对象的父级对象传播，从里到外，直至它被处理（父级对象所有同类事件都将被激活），或者它到达了对象层次的最顶层，即document对象（有些浏览器是window）。</p>
<p>打个比方说：你在地方法院要上诉一件案子，如果地方没有处理此类案件的法院，地方相关部门会帮你继续往上级法院上诉，比如从市级到省级，直至到中央法院，最终使你的案件得以处理。</p>
<p><img src="/2021/03/02/%E4%BA%8B%E4%BB%B6%E5%86%92%E6%B3%A1/0979.jpg" alt="事件冒泡"></p>
<h2 id="二、事件冒泡有什么作用"><a href="#二、事件冒泡有什么作用" class="headerlink" title="二、事件冒泡有什么作用"></a>二、事件冒泡有什么作用</h2><p>（1）事件冒泡允许<strong>多个操作被集中处理</strong>（把事件处理器添加到一个父级元素上，避免把事件处理器添加到多个子级元素上），它还可以让你<strong>在对象层的不同级别捕获事件</strong>。</p>
<span id="more"></span>

<p>（2）让<strong>不同的对象同时捕获同一事件</strong>，并调用自己的专属处理程序做自己的事情，就像老板一下命令，各自员工做自己岗位上的工作去了。</p>
<h2 id="三、需要注意什么"><a href="#三、需要注意什么" class="headerlink" title="三、需要注意什么"></a>三、需要注意什么</h2><p>●事件捕获其实有三种方式，事件冒泡只是其中的一种：</p>
<p>（1）IE从里到外（inside→outside）的冒泡型事件。</p>
<p>（2）Netscape4.0从外到里（outside→inside）的捕获型事件。</p>
<p>（3）DOM事件流，先从外到里，再从里到外回到原点（outside→inside→outside）的事件捕获方法（似乎对象将触发两次事件处理，这有什么作用？鄙人不懂！）。</p>
<p>●不是所有的事件都能冒泡。以下事件不冒泡：blur、focus、load、unload。</p>
<p>●事件捕获方式在不同浏览器，甚至同种浏览器的不同版本中是有所区别的。如Netscape4.0采用捕获型事件解决方案，其它多数浏览器则支持冒泡型事件解决方案，另外DOM事件流还支持文本节点事件冒泡。</p>
<p>●事件捕获到达顶层的目标在不同浏览器或不同浏览器版本也是有区别的。在IE6中HTML是接收事件冒泡的，另外大部分浏览器将冒泡延续到window对象，即……body→documen→window。</p>
<p>●阻止冒泡并不能阻止对象默认行为。比如submit按钮被点击后会提交表单数据，这种行为无须我们写程序定制。</p>
<h2 id="四、阻止事件冒泡"><a href="#四、阻止事件冒泡" class="headerlink" title="四、阻止事件冒泡"></a>四、阻止事件冒泡</h2><p>通常情况下我们都是一步到位，明确自己的事件触发源，并不希望浏览器自作聪明、漫无目的地去帮我们找合适的事件处理程序，即我们明确最精准目标，这种情况下我们不需要事件冒泡。另外通过对事件冒泡的理解，我们知道程序将做多较多额外的事情，这必然增大程序开销。还有一个重要的问题是：事件冒泡处理可能会激活我们本来不想激活的事件，导致程序错乱，甚至无从下手调试，这常成为对事件冒泡不熟悉程序员的棘手问题。所以必要时，我们要阻止事件冒泡。</p>
<h2 id="五、target与this"><a href="#五、target与this" class="headerlink" title="五、target与this"></a>五、target与this</h2><p>定义：<br>target 属性规定哪个 DOM 元素触发了该事件。<br>target 事件属性可返回事件的目标节点（触发该事件的节点），如生成事件的元素、文档或窗口。</p>
<p>语法：</p>
<p>event.target</p>
<p>event.target.nodeName 　　//获取事件触发元素标签名（li，p，div，img，button…）</p>
<p>event.target.id　　　　　　//获取事件触发元素id</p>
<p>event.target.className　　//获取事件触发元素classname</p>
<p>event.target.innerHTML　 //获取事件触发元素的内容（li）</p>
<p>jquery:this 与 e.target区别:</p>
<p>this会冒泡。e.target不冒泡就是指向事件触发的dom。</p>
<p>1.e.target.value获取的就是你选择接受事件的元素输入的或者选择的值。<br>参数e接收事件对象。<br>而事件对象也有很多属性和方法，其中target属性是获取触发事件对象的目标，也就是绑定事件的元素，e.target表示该DOM元素，然后在获取其相应的属性值。</p>
<p>2.this就是指向当前事件所绑定的元素。</p>
<p>3.e.target.value和this的区别：</p>
<p>先弄清楚e.target指向哪个元素，然后看看这个元素的value属性的值就可以得到了。初学者一般会把e.target和this弄混，搞不懂这两个具体指向哪个元素。</p>
<p>简单来说，this就是指向当前事件所绑定的元素，而e.target指向事件执行时鼠标所点击区域的那个元素。容易搞不懂的地方是，初学者会认为当前事件所绑定的元素不就是鼠标所点击的那个元素嘛，这时候就要看看事件绑定的元素内部有没有子元素了，如果有子元素的话e.target指向这个子元素，如果没有，e.target和this都指向事件所绑定的元素。</p>
<h2 id="六、事件函数function-e-中e的问题"><a href="#六、事件函数function-e-中e的问题" class="headerlink" title="六、事件函数function(e){}中e的问题"></a>六、事件函数function(e){}中e的问题</h2><p>简单来说就是指向了当前发生的事件（click、mouseover等等），保存了当前事件的信息。如鼠标点击事件，有鼠标的坐标信息。</p>
<p>其中，e是标准浏览器传递进去的事件参数，低版本IE不会传递，事件参数放置在window.event对象中，所以兼容低版本的IE要加上这句e=e||window.event;</p>
<p>使用for in来输出一点东西：</p>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>无标题文档</title>
</head>
<body>
<input type="button" value="点击显示事件属性" οnclick="fun(event)">
<script type="text/javascript" language="javascript">
function fun(e){
    var evt=e||window.event;
    for(var pro in evt){
        document.write('event.'+pro+'='+evt.pro+'<br />');
    }
}
</script>
</body>
</html>


<p>注：e可加可不加，如果后面需要获取操作的信息 就要加e 如果不需要，只是完成一个事件，就可以不加e</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>jquery</tag>
        <tag>事件冒泡</tag>
        <tag>JavaScript</tag>
        <tag>e.target</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序ui组件库</title>
    <url>/2021/03/26/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fui%E7%BB%84%E4%BB%B6%E5%BA%93/</url>
    <content><![CDATA[<h1 id="微信小程序UI组件库"><a href="#微信小程序UI组件库" class="headerlink" title="微信小程序UI组件库"></a>微信小程序UI组件库</h1><p>微信小程序开发的过程中，不借助UI组件库开发出来的页面，不但要花费我们更多的时间，页面的美观上也有一定差距，毕竟颜狗嘛~。</p>
<p>所以我需要拥有常用的几个UI组件库，个人收藏。</p>
<h2 id="WeUI"><a href="#WeUI" class="headerlink" title="WeUI"></a>WeUI</h2><p>WeUI 是微信官方出品的组件库，它沿用了微信的视觉设计与交互设计，提供了各类原生组件的基础样式，风格简约大方。选用这一套组件库，可以让你的小程序与微信本身保持一致的界面风格。</p>
<p>官方组件库能够满足基础的界面需求，但是，如果你想要更加饱满的视觉，更加活泼的动效，恐怕 WeUI 就满足不了你的需要了。</p>
<p>GitHub 地址：<a href="https://github.com/Tencent/weui">https://github.com/Tencent/weui</a></p>
<p><img src="/2021/03/26/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Fui%E7%BB%84%E4%BB%B6%E5%BA%93/2865.jpg" alt="微信小程序UI组件库"></p>
<h2 id="ColorUI-组件库"><a href="#ColorUI-组件库" class="headerlink" title="ColorUI 组件库"></a>ColorUI 组件库</h2><p>ColorUI 是由文晓港发布的高颜值组件库，侧重于视觉交互。比起 WeUI 的低调克制，ColorUI 色彩鲜亮，样式繁多。除了拥有非常丰富的原生组件的自定义样式，它还提供一些常见的页面元素，比如时间轴、步骤条、聊天页、模态窗口等等。</p>
<p>ColorUI 给大家提供了高度自定义的组件，一些比较麻烦的样式，开发者只需调用其组件就能得以实现。不过，ColorUI 也不是万能的，比如，它尚未涉及购物类小程序所需的组件。</p>
<p>GitHub 地址：<a href="https://github.com/weilanwl/ColorUI">https://github.com/weilanwl/ColorUI</a></p>
<!--more--->

<h2 id="Vant-组件库"><a href="#Vant-组件库" class="headerlink" title="Vant 组件库"></a>Vant 组件库</h2><p>Vant 是由有赞发布的，轻量的小程序 UI 组件库。如果你想制作一款电商、餐饮、外卖平台、票务预订等购物类小程序，选用 Vant 是较为合适的。为什么这么说呢？</p>
<p>首先，我们来看「业务组件」这一块。可以看到，「商品卡片」与「提交订单栏」两个组件可以构成一个基本的「购物车」页面；而「商品卡片」与「商品导航」二者又可以组成一个简单的商店页面。</p>
<p>对开发者非常友好，文档可以说是事无巨细了，而且在文档右侧，还可以预览样式哦。</p>
<p>开发文档：<a href="https://youzan.github.io/vant-weapp/#/intro">https://youzan.github.io/vant-weapp/#/intro</a><br>GitHub 地址：<a href="https://github.com/youzan/vant-weapp">https://github.com/youzan/vant-weapp</a></p>
<p>​                                                 </p>
<h2 id="iViewUI"><a href="#iViewUI" class="headerlink" title="iViewUI"></a>iViewUI</h2><p>iViewUI 是由 TalkingData 发布的组件库。作为一款好用的组件库，布局、面板、列表、表单、顶部导航栏、底部导航栏等组件当然必不可少，那么 iViewUI 除了具备这些标配的组件，还有哪些亮点呢？</p>
<p>iViewUI 同样有详细的文档，但是不支持网页预览，只能打开小程序预览。</p>
<p>开发文档：<a href="https://weapp.iviewui.com/docs/guide/start">https://weapp.iviewui.com/docs/guide/start</a><br>GitHub 地址：<a href="https://github.com/TalkingData/iview-weapp">https://github.com/TalkingData/iview-weapp</a></p>
<h2 id="ZanUI-WeApp"><a href="#ZanUI-WeApp" class="headerlink" title="ZanUI WeApp"></a>ZanUI WeApp</h2><p>ZanUI WeApp是有赞移动 Web UI 规范 ZanUI 的小程序实现版本，结合了微信的视觉规范，为用户提供更加统一的使用感受。</p>
<p>现已包含 badge、btn、card、cell、dialog、icon、label、noticebar、panel、popup、switch、tab、toast、tooltips 等组件或元素。</p>
<p>GitHub地址：<a href="https://github.com/youzan/zanui-weapp">https://github.com/youzan/zanui-weapp</a><br>npm下载：npm i zanui-weapp</p>
<p>另外，ZanUI也使用mpvue重写了zanui-weapp，实现了其中所有组件，为使用mpvue的开发者提供了方便。</p>
<p>GitHub地址：<a href="https://github.com/samwang1027/mpvue-zanui">https://github.com/samwang1027/mpvue-zanui</a><br>npm下载：npm i mpvue-zanui</p>
<h2 id="MinUI"><a href="#MinUI" class="headerlink" title="MinUI"></a>MinUI</h2><p>MinUI 是蘑菇街前端开发团队开发的基于微信小程序自定义组件特性开发而成的一套简洁、易用、高效的组件库，适用场景广，覆盖小程序原生框架，各种小程序组件主流框架等，并且提供了专门的命令行工具。</p>
<p>GitHub地址：<a href="https://github.com/meili/minui">https://github.com/meili/minui</a></p>
<h2 id="vux"><a href="#vux" class="headerlink" title="vux"></a>vux</h2><p>基于webpack + vue-loader + vux可以快速开发移动端页面，配合vux-loader方便你在WeUI的基础上定制需要的样式。</p>
<p>vux-loader保证了组件按需使用，因此不用担心最终打包了整个vux的组件库代码。</p>
<p>VUX并不完全依赖于WeUI，VUX 在 WeUI 的基础上扩展了多个常用组件，但是尽量保持整体UI样式接近WeUI的设计规范。</p>
<p><a href="https://vux.li/demos/v2/?x-page=v2-doc-home#/demo">https://vux.li/demos/v2/?x-page=v2-doc-home#/demo</a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>微信小程序</tag>
        <tag>ui</tag>
      </tags>
  </entry>
  <entry>
    <title>区分组件、api等</title>
    <url>/2021/02/27/%E5%8C%BA%E5%88%86%E7%BB%84%E4%BB%B6%E3%80%81api%E7%AD%89/</url>
    <content><![CDATA[<h1 id="区别API、框架、插件、组件、控件等"><a href="#区别API、框架、插件、组件、控件等" class="headerlink" title="区别API、框架、插件、组件、控件等"></a>区别API、框架、插件、组件、控件等</h1><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p>概念</p>
<p>　　提供给不同语言的一个<strong>接口</strong>，在对应函数内提供相应的<strong>方法</strong>（控制Windows各个部件的外观和行为的一套预先定义的Windows函数），只要用js语法调用想要的功能。例，js内BOM的screen方法。</p>
<p>目的</p>
<p>　　对底层的封装，将一些不会变化的东西封装一下，可以提高开发效率。</p>
<p>API理解</p>
<p>　　JS的api有很多的功能，只要知道有这样的东西，到时候直接去网上找调用的方法就可以了。例，百度地图的API。</p>
<p> <img src="/2021/02/27/%E5%8C%BA%E5%88%86%E7%BB%84%E4%BB%B6%E3%80%81api%E7%AD%89/2340.jpg" alt="区分"></p>
<h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><p>将常用的方法进行封装，方便调取使用。但是也有各种各样的严格约束。比如bootstrap就是约束DOM结构的。麦当劳的桶</p>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>嵌入式（MVC）：核心思想就是操作DOM。例如jQuery。</p>
<p>渐进式（MVVM）：用到功能下载什么功能。</p>
<ol>
<li>Vue（中国尤大大开发的）</li>
<li>Angular（微软公司）</li>
<li>React（facebook公司）</li>
</ol>
<h3 id="框架与插件区别"><a href="#框架与插件区别" class="headerlink" title="框架与插件区别"></a>框架与插件区别</h3><p>框架相当于超大号的插件</p>
<h2 id="库"><a href="#库" class="headerlink" title="库"></a>库</h2><p>只用引进来就能使用，jQuery其实也是一个库。</p>
<span id="more"></span>

<h3 id="库和框架的区别"><a href="#库和框架的区别" class="headerlink" title="库和框架的区别"></a>库和框架的区别</h3><p>库：麦当劳的套餐。</p>
<p>框架：麦当劳的桶。</p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>前人写好可提高自己代码质量及页面展现效果的js文件。</p>
<h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><p>一系列功能封装起来，包含某种特定的职能，目的在于可以<strong>复用</strong>。</p>
<h3 id="组件和插件的区别"><a href="#组件和插件的区别" class="headerlink" title="组件和插件的区别"></a>组件和插件的区别</h3><p>组件是给jQuery添加新的全局函数，如$.ajax方法。提供某个完整功能的模块。<strong>类级别</strong> </p>
<p>插件是给jQuery对象添加方法。封装某个功能方法的函数。<strong>对象级别</strong></p>
<h2 id="控件"><a href="#控件" class="headerlink" title="控件"></a>控件</h2><p>用JS写好的功能块。比如网页上日期选择。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>API</tag>
        <tag>组件</tag>
        <tag>框架</tag>
        <tag>库</tag>
      </tags>
  </entry>
  <entry>
    <title>理解异步</title>
    <url>/2021/02/28/%E7%90%86%E8%A7%A3%E5%BC%82%E6%AD%A5/</url>
    <content><![CDATA[<h1 id="异步初步了解："><a href="#异步初步了解：" class="headerlink" title="异步初步了解："></a><strong>异步初步了解：</strong></h1><p>es6中碰到关于异步的问题，异步这个词自己知道是个什么意思，但是要我用代码解释出来的话…..有点难理解。所以接下来慢慢整理了一些异步的知识如下：</p>
<h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><p>说到异步，肯定会联系出来它的兄弟–同步（Synchronous）。</p>
<p>“同步模式”就是上一段的模式，<strong>后一个任务等待前一个任务结束，然后再执行</strong>，程序的执行顺序与任务的排列顺序是一致的、同步的.</p>
<p>“异步模式”则完全不同，<strong>每一个任务有一个或多个回调函数（callback），前一个任务结束后，不是执行后一个任务，而是执行回调函数</strong>，后一个任务则是不等前一个任务结束就执行，所以程序的执行顺序与任务的排列顺序是不一致的、异步的。</p>
<p>“异步模式”非常重要。在浏览器端，耗时很长的操作都应该异步执行，避免浏览器失去响应，最好的例子就是Ajax操作。</p>
<img src="/2021/02/28/%E7%90%86%E8%A7%A3%E5%BC%82%E6%AD%A5/9300.jpg" alt="异步">

<h2 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h2><p>介绍了理论，没啥用..直接用最直观的代码来体现吧：</p>
<span id="more"></span>

<body>
       <button id="Button">展示异步操作</button>

<pre><code>   &lt;script&gt;
     var Button=document.getElementById(&#39;Button&#39;);
     Button.onclick=function()&#123;
         alert(&#39;展示异步操作--A&#39;);
     &#125;
     alert(&#39;展示异步操作--B&#39;);
   &lt;/script&gt;
</code></pre>
<p>​     </p></body><br>这个简单的例子就体现出了异步和同步的区别了：<p></p>
<p>平常写的代码，都是从上到下来执行的，一般上面的语句还没有执行结束的情况下，下面的语句是不会执行的，但是这段代码我们很容易测试出：先弹出B窗口，当你点击按钮的时候才开始弹出A窗口。 这就是典型的异步操作，不用等把上面的语句全部执行完才开始执行下面的语句。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>异步</tag>
      </tags>
  </entry>
  <entry>
    <title>通俗理解回调函数</title>
    <url>/2021/02/26/%E9%80%9A%E4%BF%97%E7%90%86%E8%A7%A3%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<p>我们先来看看回调的英文定义：</p>
<p>A callback is a function that is passed as an argument to another function and is executed after its parent function has completed。</p>
<p>字面上的理解，<strong>回调函数就是一个参数，将这个函数作为参数传到另一个函数里面，当那个函数执行完之后，再执行传进去的这个函数</strong>。这个过程就叫做回调。</p>
<p>其实也很好理解对吧，回调，回调，就是回头调用的意思。主函数的事先干完，回头再调用传进来的那个函数。但是以前看过很多博客，他们总是将回调函数解释的云里雾里，很高深的样子。</p>
<p>​                                   <img src="/2021/02/26/%E9%80%9A%E4%BF%97%E7%90%86%E8%A7%A3%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/9657.jpg" alt="简单理解"></p>
<p>　　举一个别人举过的例子：约会结束后你送你女朋友回家，离别时，你肯定会说：“到家了给我发条信息，我很担心你。” 对不，然后你女朋友回家以后还真给你发了条信息。小伙子，你有戏了。其实这就是一个回调的过程。你留了个参数函数（要求女朋友给你发条信息）给你女朋友，然后你女朋友回家，回家的动作是主函数。她必须先回到家以后，主函数执行完了，再执行传进去的函数，然后你就收到一条信息了。</p>
<p>　　现在基本理解回调函数的意思了吧。不理解的话没关系，我们用代码说话。</p>
<p>​          <span id="more"></span></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义主函数，回调函数作为参数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">A</span>(<span class="params">callback</span>) </span>&#123;</span><br><span class="line">    callback();  </span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;我是主函数&#x27;</span>);      </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义回调函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">B</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="string">&quot;console.log(&#x27;我是回调函数&#x27;)&quot;</span>, <span class="number">3000</span>);<span class="comment">//模仿耗时操作  </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用主函数，将函数B传进去</span></span><br><span class="line">A(B);</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">我是主函数</span><br><span class="line">我是回调函数</span><br></pre></td></tr></table></figure>

<p>上面的代码中，我们先定义了主函数和回调函数，然后再去调用主函数，将回调函数传进去。</p>
<p>　　定义主函数的时候，我们让代码先去执行callback()回调函数，但输出结果却是后输出回调函数的内容。这就说明了主函数不用等待回调函数执行完，可以接着执行自己的代码。所以一般回调函数都用在耗时操作上面。比如ajax请求，比如处理文件等。</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>回调函数</tag>
      </tags>
  </entry>
</search>
